{"ast":null,"code":"var _jsxFileName = \"/Users/willieluong/Desktop/portfolio-website/src/Navigation.js\";\nimport React from 'react';\nimport './Navigation.css';\nimport { useEffect, useState } from \"react\";\n\nclass Navigation extends React.Component {\n  render() {\n    const section = ['Home', 'About', 'Project', 'Contact']; //function map will loop through the array and return the values based on the condition\n\n    const navLinks = section.map(section => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\" + section,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }\n      }, section));\n    });\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, this.props.LogoTitle), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    }, navLinks));\n  }\n\n} // //Components to add a counter to my graduation: \n// class countDown extends React.Component{\n//     render(){\n//          //Calculate how much time is left: \n//         const calculateTimeLeft = () => {\n//         //The method will grab the current year: \n//         let year = new Date().getFullYear();\n//         //The difference between the current date and the day of my graduation\n//         //The + before the new Date object is shorthand to tell JavaScript to cast the object as an integer,\n//         // which gives you the object’s Unix timestamp represented as microseconds since the epoch.\n//         const difference = +new Date(`2021-05-05`) - +new Date();\n//         let timeLeft = {};\n//         if(difference > 0){\n//             timeLeft = {\n//                 days: Math.floor(difference/(1000 * 60 * 60 * 24)),\n//                 hours: Math.floor(difference/(1000 * 60 * 60)) % 24,\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\n//                 seconds: Math.floor((difference / 1000) % 60)\n//             }\n//         }\n//         return timeLeft;\n//     }\n//     //the function will update the amount of time remaining after each rendering\n//     useEffect(() => {\n//         setTimeout(() => {\n//             setTimeLeft(calculateTimeLeft()); \n//         }, 1000); //update the timer every 1 second\n//         // //clear timeout if the component is unmounted:\n//         // return() => clearTimeout(timer);\n//     })\n//     const timerComponent = [];\n//     //iterate through the timeleft objects returned\n//     Object.keys(timeLeft).forEach((interval) => {\n//         if(!timeLeft[interval]){\n//             return;\n//         }\n//         timerComponent.push(\n//             <span>\n//                 {timeLeft[interval]} {interval}{\" \"}\n//             </span>\n//         )\n//     });\n//     return (\n//         <div>\n//         <h1>HacktoberFest 2021 Countdown</h1>\n//         <h2>With React Hooks!</h2>\n//         {timerComponent.length ? timerComponent : <span>Time's up!</span>}\n//         </div>\n//     );\n//     const[timeLeft, setTimeLeft] = useState(calculateTimeLeft())\n//     }\n// }\n\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/willieluong/Desktop/portfolio-website/src/Navigation.js"],"names":["React","useEffect","useState","Navigation","Component","render","section","navLinks","map","props","LogoTitle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,SAA7B,CAAhB,CADI,CAEJ;;AACA,UAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAaF,OAAO,IAAI;AACrC,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAG,QAAA,IAAI,EAAE,MAAMA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,OAAzB,CAAJ,CADJ;AAKH,KANgB,CAAjB;AAOA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKG,KAAL,CAAWC,SAAjC,CADH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,QADL,CAHH,CADJ;AAWH;;AAtBoC,C,CA4BzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;;;AAGA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport './Navigation.css';\nimport { useEffect, useState } from \"react\";\n\nclass Navigation extends React.Component {\n    render(){\n        const section = ['Home', 'About', 'Project', 'Contact'];\n        //function map will loop through the array and return the values based on the condition\n        const navLinks = section.map( section => {\n            return (\n                <li><a href={\"#\" + section}>{section}</a></li>\n\n            )\n\n        })\n        return (\n            <nav>\n               <h2 className=\"Logo\">{this.props.LogoTitle}</h2>\n\n               <ul>\n                   {navLinks}\n               </ul>\n            </nav>\n          \n        );\n\n    }\n\n \n}\n\n\n// //Components to add a counter to my graduation: \n\n// class countDown extends React.Component{\n//     render(){\n//          //Calculate how much time is left: \n//         const calculateTimeLeft = () => {\n//         //The method will grab the current year: \n//         let year = new Date().getFullYear();\n//         //The difference between the current date and the day of my graduation\n//         //The + before the new Date object is shorthand to tell JavaScript to cast the object as an integer,\n//         // which gives you the object’s Unix timestamp represented as microseconds since the epoch.\n//         const difference = +new Date(`2021-05-05`) - +new Date();\n\n//         let timeLeft = {};\n//         if(difference > 0){\n//             timeLeft = {\n//                 days: Math.floor(difference/(1000 * 60 * 60 * 24)),\n//                 hours: Math.floor(difference/(1000 * 60 * 60)) % 24,\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\n//                 seconds: Math.floor((difference / 1000) % 60)\n//             }\n//         }\n\n//         return timeLeft;\n\n//     }\n\n//     //the function will update the amount of time remaining after each rendering\n//     useEffect(() => {\n//         setTimeout(() => {\n//             setTimeLeft(calculateTimeLeft()); \n//         }, 1000); //update the timer every 1 second\n\n//         // //clear timeout if the component is unmounted:\n//         // return() => clearTimeout(timer);\n//     })\n\n//     const timerComponent = [];\n\n//     //iterate through the timeleft objects returned\n//     Object.keys(timeLeft).forEach((interval) => {\n//         if(!timeLeft[interval]){\n//             return;\n//         }\n\n//         timerComponent.push(\n//             <span>\n//                 {timeLeft[interval]} {interval}{\" \"}\n\n//             </span>\n//         )\n//     });\n\n//     return (\n//         <div>\n//         <h1>HacktoberFest 2021 Countdown</h1>\n//         <h2>With React Hooks!</h2>\n//         {timerComponent.length ? timerComponent : <span>Time's up!</span>}\n//         </div>\n//     );\n\n\n\n//     const[timeLeft, setTimeLeft] = useState(calculateTimeLeft())\n\n\n//     }\n// }\n\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}